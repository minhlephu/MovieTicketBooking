// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movie.INFARSTRUTURE;

#nullable disable

namespace Movie.INFARSTRUTURE.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240111101919_AddTableMovie")]
    partial class AddTableMovie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Movie.INFARSTRUTURE.Entities.Genre", b =>
                {
                    b.Property<int>("genre_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genre_id"), 1L, 1);

                    b.Property<string>("genre_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genre_id");

                    b.ToTable("genre", (string)null);
                });

            modelBuilder.Entity("Movie.INFARSTRUTURE.Entities.Movie", b =>
                {
                    b.Property<Guid>("mv_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("duration")
                        .HasColumnType("int");

                    b.Property<int?>("genre_id")
                        .HasColumnType("int");

                    b.Property<string>("mv_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("release_date")
                        .HasColumnType("datetime2");

                    b.HasKey("mv_id");

                    b.HasIndex("genre_id");

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("Movie.INFARSTRUTURE.Entities.Movie", b =>
                {
                    b.HasOne("Movie.INFARSTRUTURE.Entities.Genre", "genre")
                        .WithMany("movies")
                        .HasForeignKey("genre_id");

                    b.Navigation("genre");
                });

            modelBuilder.Entity("Movie.INFARSTRUTURE.Entities.Genre", b =>
                {
                    b.Navigation("movies");
                });
#pragma warning restore 612, 618
        }
    }
}
